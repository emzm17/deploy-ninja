name: CD Pipeline

on:
  push:
    branches:
      - new-prod-1
  pull_request: 
    branches: 
      - new-prod-1 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH into Server and Deploy
        run: |
          sshpass -p ${{ secrets.SERVER_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /home/${{ secrets.SERVER_USERNAME }}/app

            # Stop and remove the existing container if it exists
            if sudo docker ps -a --filter "name=build-server" | grep build-server; then
              echo "Stopping and removing the existing build-server container..."
              sudo docker stop build-server || true
              sudo docker rm build-server || true
            fi

            # Pull the latest image and run the container
            echo "Pulling the latest Docker image..."
            sudo docker pull emzm17/build-server:latest

            echo "Starting a new build-server container..."
            sudo docker run -d --name build-server emzm17/build-server:latest
          EOF
